#======================================================================================
# coordinates.read_crd
#======================================================================================
def read_crd(root,moleculelist):
    """
    """
    from ..md_xml import molecule
    from ..md_xml import helpers
    
    pointer = root.find('./input/coordinates')    
    try:
        crd = pointer.get('crd')
        fcrd=open(crd,'r')
    except:
        helpers.warning('Coordinate file %s could not be opened.'%crd)
        return
    while True:
        buffer = ((fcrd.readline()).upper().rstrip())
        if buffer[0]=="*":
            continue
        nline = int(buffer)
        break

#   Decomposing coordinates into molecules    
    molecules = {}
    for i in range(nline):
        buffer = ((fcrd.readline()).upper().rstrip())
        line_element = buffer.split()
        if line_element[2] not in moleculelist:
            continue
        if line_element[2] not in molecules.keys():
            molecules[line_element[2]] = []
        if line_element[3][0]=="D":
            continue
        molecules[line_element[2]].append(buffer)
    for i in moleculelist:
        if len(molecules[i])<1:
            warning('Coordinates for %s are missing!'%i)
        print'\n\t\t<molecule name="%s">'%i
        mol = root.find('./molecule/[@name="%s"]'%i)
        current_molecule = molecule.moleculeElement(mol,i)
        atomlist = current_molecule.list("ATOM VIRTUAL")
        natom = len(atomlist)
        nmol = len(molecules[i])/natom
        try:
            current_molecule.set_nmol(int(nmol))
            print'\t\t\tnmol = ',nmol
        except:
            error('Coordinates do not match with <molecule/atom>s.')
        for line in range(len(molecules[i])):
            print molecules[i][line]
            line_element =  molecules[i][line].split()
            if line_element[3] != atomlist[line%natom]:
                error('Coordinates for %s in line %s do not match!'%(atomlist[line%natom],line))
            xyz = [float(line_element[4]),float(line_element[5]),float(line_element[6])]
            current_molecule.set_coordinates(line_element[3],int(line/natom)+1,xyz)

            
#======================================================================================
# coordinates.write_crd
#   ATOMNO RESNO     RES   TYPE   X Y Z     SEGID   RESID  Weighting
#    I10    I10  2X  A8 2X  A8   3F20.10 2X   A8 2X   A8    F20.10
#======================================================================================
def write_crd(f,root):
    """
    """
    f.write('* generated by ForConx\n')
    f.write('*\n')
    natom = len(root.findall('molecule/coordinates'))
    f.write('%10s  EXT\n'%natom)
    iatom  = 0
    imol   = 0
    molres = 0
    for mol in root.findall('molecule'):
        imol += 1
        resname = mol.get('name')
        for i in mol.findall('coordinates'):
            iatom +=1
            name = i.get('name')
            ires = int(i.get('imol'))
            xyz  = (i.get('xyz')).split()
            line  = "%10s%10s  "%(iatom,molres+ires)
            line += "%-8s  %-8s"  %(resname,name)
            line += "%20.10f%20.10f%20.10f"%(float(xyz[0]),float(xyz[1]),float(xyz[2]))
            line += "  %-8s  %-8s%20.10f\n"%(resname,imol,0.0)
            f.write(line)
        molres += ires
